@page
@model CIDM3312_FINALPROJECT.Pages.Tickets.IndexModel
@using CIDM3312_FINALPROJECT.Models
@inject Context _context
@using Microsoft.AspNetCore.Mvc.Rendering
@using CIDM3312_FINALPROJECT.Data
@using System.Linq;


@{
    ViewData["Title"] = "Tickets";
}

<h1>Tickets</h1>

<div>
    <form method="get" action="@Url.Action("Index")">
        <input type="text" name="searchString" placeholder="Search by ticket description...">
        <button type="submit">Search</button>
    </form>
</div>

<div>
    <label>Sort by:</label>
    <select asp-for="SelectedValue" asp-items="Model.Options"></select>
    <button type="submit">Sort</button>
</div>

<div class="text-right">
    <a class="btn btn-primary" href="~/Tickets/Create">Create Ticket</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Ticket ID</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Type</th>
            <th>Description</th>
            <th>Customer</th>
            <th>Management</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ticket in Model.Tickets)
{
    <tr>
        <td>@ticket.TicketID</td>
        <td>@ticket.Status</td>
        <td>@ticket.Priority</td>
        <td>@ticket.Type</td>
        <td>@ticket.Description</td>
        <td>
            <a href="/Customers/Details/@ticket.CustomerId">
                @{
                    var customer = _context.Customers.FirstOrDefault(c => c.Id == ticket.CustomerId);
                    if (customer != null)
                    {
                        @customer.FirstName @customer.LastName
                    }
                }
            </a>
        </td>
        <td>@ticket.Management</td>
        <td>
            <a href="~/Tickets/Details?id=@ticket.TicketID">View</a>
        </td>
    </tr>
}

    </tbody>
</table>

@if (Model.Tickets.Count() == 0)
{
    <p>No tickets found.</p>
}

<div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-sortOrder="@(Model.SortOrder)" asp-route-searchString="@(Model.SearchString)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active">
                        <span class="page-link">@i <span class="sr-only">(current)</span></span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@i" asp-route-sortOrder="@(Model.SortOrder)" asp-route-searchString="@(Model.SearchString)">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-sortOrder="@(Model.SortOrder)" asp-route-searchString="@(Model.SearchString)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>

